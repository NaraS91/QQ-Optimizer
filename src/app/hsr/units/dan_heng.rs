use crate::app::hsr::{
    units::{
        BaseStat, BuffScaling, Modifier, ModifierData, ModifierTarget, Source, Stat, UnitKind,
    },
    utils::value_with_buffer,
};

use super::{ModifierOrDOT, Unit};

pub fn modifiers(_unit: &Unit) -> Vec<ModifierOrDOT> {
    vec![ModifierOrDOT::Modifier(Modifier::new(
        (UnitKind::Dan_Heng, Source::Skill),
        vec![ModifierData::new(
            ModifierTarget::Enemy,
            Stat::Base(BaseStat::Spd),
            BuffScaling::Multiplicative,
            value_with_buffer!(|buffer: &Unit| {
                SKILL_PARAMS[0].1
                    + if buffer.unique_data.eidolon >= 6 {
                        -0.06
                    } else {
                        0.
                    }
            }),
        )],
        true,
    ))]
}

const SKILL_PARAMS: [(f32, f32, f32, f32); 15] = [
    (1.3000, 0.1200, 2.0000, 1.0000),
    (1.4300, 0.1200, 2.0000, 1.0000),
    (1.5600, 0.1200, 2.0000, 1.0000),
    (1.6900, 0.1200, 2.0000, 1.0000),
    (1.8200, 0.1200, 2.0000, 1.0000),
    (1.9500, 0.1200, 2.0000, 1.0000),
    (2.1125, 0.1200, 2.0000, 1.0000),
    (2.2750, 0.1200, 2.0000, 1.0000),
    (2.4375, 0.1200, 2.0000, 1.0000),
    (2.6000, 0.1200, 2.0000, 1.0000),
    (2.7300, 0.1200, 2.0000, 1.0000),
    (2.8600, 0.1200, 2.0000, 1.0000),
    (2.9900, 0.1200, 2.0000, 1.0000),
    (3.1200, 0.1200, 2.0000, 1.0000),
    (3.2500, 0.1200, 2.0000, 1.0000),
];

const ULT_PARAMS: [(f32, f32); 15] = [
    (2.4000, 0.7200),
    (2.5600, 0.7680),
    (2.7200, 0.8160),
    (2.8800, 0.8640),
    (3.0400, 0.9120),
    (3.2000, 0.9600),
    (3.4000, 1.0200),
    (3.6000, 1.0800),
    (3.8000, 1.1400),
    (4.0000, 1.2000),
    (4.1600, 1.2480),
    (4.3200, 1.2960),
    (4.4800, 1.3440),
    (4.6400, 1.3920),
    (4.8000, 1.4400),
];

const TALENT_PARAMS: [(f32, f32); 15] = [
    (0.1800, 2.0000),
    (0.1980, 2.0000),
    (0.2160, 2.0000),
    (0.2340, 2.0000),
    (0.2520, 2.0000),
    (0.2700, 2.0000),
    (0.2925, 2.0000),
    (0.3150, 2.0000),
    (0.3375, 2.0000),
    (0.3600, 2.0000),
    (0.3780, 2.0000),
    (0.3960, 2.0000),
    (0.4140, 2.0000),
    (0.4320, 2.0000),
    (0.4500, 2.0000),
];

const TECH_PARAMS: [(f32, f32); 1] = [(0.4000, 3.0000)];

const BASIC_PARAMS: [f32; 9] = [
    0.5000, 0.6000, 0.7000, 0.8000, 0.9000, 1.0000, 1.1000, 1.2000, 1.3000,
];
